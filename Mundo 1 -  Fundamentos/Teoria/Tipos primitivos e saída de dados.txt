Tipos:

int -> Inteiro
float -> Real ou Ponto flutuante
bool -> Lógico ou boleanos ( True ou False)
str -> Caractere oou string

Uso da familia do 'is'

print("", objeto.is*()) # O objeto é a variável que está recebendo o valor
print("", type(objeto)) # Utillizando o type retorna o tipo primitivo do objeto

Conversão - string:
 
Method 	         Description
isalnum()	     Retorna True se todos os caracteres da string forem alfanuméricos
isalpha()	     Retorna True se todos os caracteres da string estiverem no alfabeto
isascii()	     Retorna True se todos os caracteres da string forem caracteres ASCII
isdecimal()	     Retorna True se todos os caracteres da string forem decimais
isdigit()	     Retorna True se todos os caracteres da string forem dígitos
isidentifier()	 Retorna True se a string for um identificador
islower()	     Retorna True se todos os caracteres da string estiverem em minúsculas
isnumeric()	     Retorna True se todos os caracteres da string forem numéricos
isprintable()	 Retorna True se todos os caracteres da string puderem ser impressos
isspace()	     Retorna True se todos os caracteres da string forem espaços em branco
istitle() 	     Retorna True se a string segue as regras de um título
isupper()	     Retorna True se todos os caracteres da string estiverem maiúsculos
capitalize()	 Converte o primeiro caractere para maiúsculo
casefold()	     Converte string em minúsculas
center()	     Retorna uma string centralizada
count()	         Retorna o número de vezes que um valor especificado ocorre em uma string
encode()	     Returns an encoded version of the string
endswith()	     Returns true if the string ends with the specified value
expandtabs()	 Sets the tab size of the string
find()	         Searches the string for a specified value and returns the position of where it was found
format()	     Formats specified values in a string
format_map()	 Formats specified values in a string
index()	         Searches the string for a specified value and returns the position of where it was found
join()	         Joins the elements of an iterable to the end of the string
ljust()	         Returns a left justified version of the string
lower()	         Converts a string into lower case
lstrip()	     Returns a left trim version of the string
maketrans()	     Returns a translation table to be used in translations
partition()	     Returns a tuple where the string is parted into three parts
replace()	     Returns a string where a specified value is replaced with a specified value
rfind()	         Searches the string for a specified value and returns the last position of where it was found
rindex()	     Searches the string for a specified value and returns the last position of where it was found
rjust()	         Returns a right justified version of the string
rpartition()	 Returns a tuple where the string is parted into three parts
rsplit()	     Splits the string at the specified separator, and returns a list
rstrip()	     Returns a right trim version of the string
split()	         Splits the string at the specified separator, and returns a list
splitlines()	 Splits the string at line breaks and returns a list
startswith()	 Returns true if the string starts with the specified value
strip()	         Returns a trimmed version of the string
swapcase()	     Swaps cases, lower case becomes upper case and vice versa
title()	         Converts the first character of each word to upper case
translate()	     Returns a translated string
upper()	         Converts a string into upper case
zfill()	         Fills the string with a specified number of 0 values at the beginning